{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utkarsh\\\\Desktop\\\\APQ Roadmap\\\\roadmap\\\\src\\\\Questionnaire.js\",\n  _s = $RefreshSig$();\n// src/Questionnaire.js\nimport React, { useState } from 'react';\nimport { Checkbox, FormControlLabel, Button, Typography, Container, Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  id: 1,\n  text: \"Question 1\",\n  options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"]\n}, {\n  id: 2,\n  text: \"Question 2\",\n  options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"]\n}, {\n  id: 3,\n  text: \"Question 3\",\n  options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"]\n}, {\n  id: 4,\n  text: \"Question 4\",\n  options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"]\n}, {\n  id: 5,\n  text: \"Question 5\",\n  options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"]\n}];\nconst Questionnaire = () => {\n  _s();\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n  const handleCheckboxChange = (questionId, option) => {\n    setAnswers(prev => {\n      const updatedAnswers = {\n        ...prev\n      };\n      if (!updatedAnswers[questionId]) {\n        updatedAnswers[questionId] = [];\n      }\n      if (updatedAnswers[questionId].includes(option)) {\n        updatedAnswers[questionId] = updatedAnswers[questionId].filter(o => o !== option);\n      } else {\n        updatedAnswers[questionId].push(option);\n      }\n      return updatedAnswers;\n    });\n  };\n  const handleSubmit = () => {\n    navigate('/results', {\n      state: {\n        answers\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Self-Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: question.options.map(option => {\n            var _answers$question$id;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: ((_answers$question$id = answers[question.id]) === null || _answers$question$id === void 0 ? void 0 : _answers$question$id.includes(option)) || false,\n                  onChange: () => handleCheckboxChange(question.id, option)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this),\n                label: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Questionnaire, \"deL0RG+mc8SurQ64wRDJRkYFErU=\", false, function () {\n  return [useNavigate];\n});\n_c = Questionnaire;\nexport default Questionnaire;\nvar _c;\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"names":["React","useState","Checkbox","FormControlLabel","Button","Typography","Container","Grid","useNavigate","jsxDEV","_jsxDEV","questions","id","text","options","Questionnaire","_s","answers","setAnswers","navigate","handleCheckboxChange","questionId","option","prev","updatedAnswers","includes","filter","o","push","handleSubmit","state","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","question","container","spacing","_answers$question$id","item","xs","sm","control","checked","onChange","label","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Utkarsh/Desktop/APQ Roadmap/roadmap/src/Questionnaire.js"],"sourcesContent":["// src/Questionnaire.js\r\nimport React, { useState } from 'react';\r\nimport { Checkbox, FormControlLabel, Button, Typography, Container, Grid } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst questions = [\r\n  { id: 1, text: \"Question 1\", options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"] },\r\n  { id: 2, text: \"Question 2\", options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"] },\r\n  { id: 3, text: \"Question 3\", options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"] },\r\n  { id: 4, text: \"Question 4\", options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"] },\r\n  { id: 5, text: \"Question 5\", options: [\"Option A\", \"Option B\", \"Option C\", \"Option D\"] },\r\n];\r\n\r\nconst Questionnaire = () => {\r\n  const [answers, setAnswers] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleCheckboxChange = (questionId, option) => {\r\n    setAnswers(prev => {\r\n      const updatedAnswers = { ...prev };\r\n      if (!updatedAnswers[questionId]) {\r\n        updatedAnswers[questionId] = [];\r\n      }\r\n      if (updatedAnswers[questionId].includes(option)) {\r\n        updatedAnswers[questionId] = updatedAnswers[questionId].filter(o => o !== option);\r\n      } else {\r\n        updatedAnswers[questionId].push(option);\r\n      }\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    navigate('/results', { state: { answers } });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>Self-Assessment</Typography>\r\n      <form>\r\n        {questions.map(question => (\r\n          <div key={question.id}>\r\n            <Typography variant=\"h6\">{question.text}</Typography>\r\n            <Grid container spacing={2}>\r\n              {question.options.map(option => (\r\n                <Grid item xs={12} sm={6} key={option}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={answers[question.id]?.includes(option) || false}\r\n                        onChange={() => handleCheckboxChange(question.id, option)}\r\n                      />\r\n                    }\r\n                    label={option}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Questionnaire;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}