{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utkarsh\\\\Desktop\\\\APQ Roadmap\\\\roadmap\\\\src\\\\Assessment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Assessment = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('/data.json').then(response => response.json()).then(data => setQuestions(data.questions));\n  }, []);\n  const handleCheckboxChange = (questionId, optionId) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: optionId\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    navigate('/results', {\n      state: {\n        answers,\n        questions\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Self-Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${question.id}`,\n            value: option.id,\n            checked: answers[question.id] === option.id,\n            onChange: () => handleCheckboxChange(question.id, option.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Assessment, \"N91DSdBlXqQQRV9HsVDLm8OSnc8=\", false, function () {\n  return [useNavigate];\n});\n_c = Assessment;\nexport default Assessment;\nvar _c;\n$RefreshReg$(_c, \"Assessment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Assessment","_s","questions","setQuestions","answers","setAnswers","navigate","fetch","then","response","json","data","handleCheckboxChange","questionId","optionId","prev","handleSubmit","event","preventDefault","state","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","question","text","options","option","type","name","id","value","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Utkarsh/Desktop/APQ Roadmap/roadmap/src/Assessment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Assessment = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('/data.json')\r\n      .then(response => response.json())\r\n      .then(data => setQuestions(data.questions));\r\n  }, []);\r\n\r\n  const handleCheckboxChange = (questionId, optionId) => {\r\n    setAnswers(prev => ({ ...prev, [questionId]: optionId }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    navigate('/results', { state: { answers, questions } });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Self-Assessment</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {questions.map(question => (\r\n          <div key={question.id}>\r\n            <h2>{question.text}</h2>\r\n            {question.options.map(option => (\r\n              <div key={option.id}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${question.id}`}\r\n                  value={option.id}\r\n                  checked={answers[question.id] === option.id}\r\n                  onChange={() => handleCheckboxChange(question.id, option.id)}\r\n                />\r\n                <label>{option.text}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assessment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}