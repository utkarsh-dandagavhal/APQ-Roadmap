{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utkarsh\\\\Desktop\\\\APQ Roadmap\\\\roadmap\\\\src\\\\components\\\\QuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  id: 'q1',\n  text: 'How do you rate your overall health?',\n  options: ['Excellent', 'Good', 'Fair', 'Poor']\n}, {\n  id: 'q2',\n  text: 'How often do you exercise?',\n  options: ['Daily', 'Weekly', 'Monthly', 'Rarely']\n}, {\n  id: 'q3',\n  text: 'How would you describe your diet?',\n  options: ['Balanced', 'Moderate', 'Unhealthy', 'Not sure']\n}, {\n  id: 'q4',\n  text: 'How many hours of sleep do you get per night?',\n  options: ['7-8 hours', '5-6 hours', '3-4 hours', 'Less than 3 hours']\n}, {\n  id: 'q5',\n  text: 'Do you feel stressed?',\n  options: ['Never', 'Sometimes', 'Often', 'Always']\n}];\nconst QuestionForm = () => {\n  _s();\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n  const handleCheckboxChange = (questionId, option) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: [...(prevAnswers[questionId] || []), option]\n    }));\n  };\n  const handleSubmit = () => {\n    navigate('/results', {\n      state: {\n        answers\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Self-Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => handleCheckboxChange(question.id, option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"deL0RG+mc8SurQ64wRDJRkYFErU=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","questions","id","text","options","QuestionForm","_s","answers","setAnswers","navigate","handleCheckboxChange","questionId","option","prevAnswers","handleSubmit","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Utkarsh/Desktop/APQ Roadmap/roadmap/src/components/QuestionForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst questions = [\r\n  { id: 'q1', text: 'How do you rate your overall health?', options: ['Excellent', 'Good', 'Fair', 'Poor'] },\r\n  { id: 'q2', text: 'How often do you exercise?', options: ['Daily', 'Weekly', 'Monthly', 'Rarely'] },\r\n  { id: 'q3', text: 'How would you describe your diet?', options: ['Balanced', 'Moderate', 'Unhealthy', 'Not sure'] },\r\n  { id: 'q4', text: 'How many hours of sleep do you get per night?', options: ['7-8 hours', '5-6 hours', '3-4 hours', 'Less than 3 hours'] },\r\n  { id: 'q5', text: 'Do you feel stressed?', options: ['Never', 'Sometimes', 'Often', 'Always'] }\r\n];\r\n\r\nconst QuestionForm = () => {\r\n  const [answers, setAnswers] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleCheckboxChange = (questionId, option) => {\r\n    setAnswers(prevAnswers => ({\r\n      ...prevAnswers,\r\n      [questionId]: [...(prevAnswers[questionId] || []), option]\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    navigate('/results', { state: { answers } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-form\">\r\n      <h1>Self-Assessment</h1>\r\n      {questions.map(question => (\r\n        <div key={question.id} className=\"question\">\r\n          <h3>{question.text}</h3>\r\n          {question.options.map(option => (\r\n            <label key={option}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => handleCheckboxChange(question.id, option)}\r\n              />\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAG,CAChB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE,sCAAsC;EAAEC,OAAO,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;AAAE,CAAC,EAC1G;EAAEF,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE,4BAA4B;EAAEC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ;AAAE,CAAC,EACnG;EAAEF,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE,mCAAmC;EAAEC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU;AAAE,CAAC,EACnH;EAAEF,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE,+CAA+C;EAAEC,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,mBAAmB;AAAE,CAAC,EAC1I;EAAEF,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE,uBAAuB;EAAEC,OAAO,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ;AAAE,CAAC,CAChG;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,oBAAoB,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;IACnDJ,UAAU,CAACK,WAAW,KAAK;MACzB,GAAGA,WAAW;MACd,CAACF,UAAU,GAAG,CAAC,IAAIE,WAAW,CAACF,UAAU,CAAC,IAAI,EAAE,CAAC,EAAEC,MAAM;IAC3D,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBL,QAAQ,CAAC,UAAU,EAAE;MAAEM,KAAK,EAAE;QAAER;MAAQ;IAAE,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEP,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBpB,SAAS,CAACqB,GAAG,CAACC,QAAQ,iBACrBvB,OAAA;MAAuBgB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACzCjB,OAAA;QAAAiB,QAAA,EAAKM,QAAQ,CAACpB;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACvBE,QAAQ,CAACnB,OAAO,CAACkB,GAAG,CAACV,MAAM,iBAC1BZ,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UACEwB,IAAI,EAAC,UAAU;UACfC,QAAQ,EAAEA,CAAA,KAAMf,oBAAoB,CAACa,QAAQ,CAACrB,EAAE,EAAEU,MAAM;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,EACDT,MAAM;MAAA,GALGA,MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACR,CAAC;IAAA,GAVME,QAAQ,CAACrB,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWhB,CACN,CAAC,eACFrB,OAAA;MAAQ0B,OAAO,EAAEZ,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,YAAY;EAAA,QAECP,WAAW;AAAA;AAAA6B,EAAA,GAFxBtB,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}